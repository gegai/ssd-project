__author__ = 'admin'#!/usr/bin/python# encoding: utf-8import flask_restfulfrom flask import Blueprint, jsonify, requestfrom flask import make_response# from app.model.ssditem.ssditem_app import SSDfrom app.model.initgroup_app.initgroup_app import SSDItemfrom app.model.clickbutton.clickbutton_app import Clickfrom app.model.insertsql.insert_app import InsertAPI_HOSTINFO_VERSION_V1 = 1API_HOSTINFO_VERSION = API_HOSTINFO_VERSION_V1api_hostinfo_v1_bp = Blueprint('api_hostinfo_v1', __name__)api_hostinfo_v1 = flask_restful.Api(api_hostinfo_v1_bp)class ssd_grouplist(flask_restful.Resource):    @staticmethod    def post():        option1 = request.get_json("id")        print (option1)        id=option1['id']        id_str=str(id)        # id_tuple=(""+id_str+"",)        result = Click().group_host_info(id_str)        return resultapi_hostinfo_v1.add_resource(ssd_grouplist, '/ssd/grouplist')class ssd_monitorinfo(flask_restful.Resource):    @staticmethod    def post():        option1 =request.get_json("id")        id=option1['id']        id_str=str(id)        print option1        #        # id_tuple=(""+id_str+"",)        result = Click().host_monitorinfo(id_str)        return resultapi_hostinfo_v1.add_resource(ssd_monitorinfo, '/ssd/monitorinfo')class ssd_monitorinfo_by_card(flask_restful.Resource):    @staticmethod    def post():        option1 =request.get_json("id")        print option1        id=option1['id']        id_str=str(id)        print option1        # id_tuple=(""+id_str+"",)        card=option1['card']        card_str = str(card)        # card_tuple = ("" +card_str+ "",)        result = SSDItem().select_monitor_by_card(id_str,card_str)        return resultapi_hostinfo_v1.add_resource(ssd_monitorinfo_by_card, '/ssd/monitorinfobycard')class ssd_warning(flask_restful.Resource):    @staticmethod    def post():        result = SSDItem().host_error_all()        return resultapi_hostinfo_v1.add_resource(ssd_warning, '/ssd/warning')class ssd_operate_state(flask_restful.Resource):    @staticmethod    def post():        option1 = request.get_json("operate_state")        print option1        warn_id=option1['warn_id']        operate_state=option1['operate_state']        warn_id_str=str(warn_id)        # warn_id_tuple=(""+warn_id_str+"",)        operate_state_str=str(operate_state)        # operate_state_tuple=(""+operate_state_str+"",)        result=Insert().operate_state(warn_id_str,operate_state_str)        return resultapi_hostinfo_v1.add_resource(ssd_operate_state, '/ssd/operate_state')class ssd_rename(flask_restful.Resource):    @staticmethod    def post():        option1 = request.get_json("id")        id=option1['id']        name=option1['name']        id_str=str(id)        # id_tuple=(""+id_str+"",)        name_str=str(name)        # name_tuple=(""+name_str+"",)        result = Click().group_rename(id_str,name_str)        return resultapi_hostinfo_v1.add_resource(ssd_rename, '/ssd/rename')class ssd_movegroup(flask_restful.Resource):    @staticmethod    def post():        option1 = request.get_json("list_id")        old_id=option1['old_id']        new_id=option1['new_id']        old_id_str=str(old_id)        # old_id_tuple=(""+ old_id_str+"",)        new_id_str=str(new_id)        # new_id_tuple=(""+ new_id_str+"",)        id_list=[]        for item in option1['id_list']:            id_str=str(item['id'])            print id_str            # id_tuple=(""+id_str+"",)            id_list.append(id_str)        result = Click().move_group(id_list,old_id_str, new_id_str)        return resultapi_hostinfo_v1.add_resource(ssd_movegroup, '/ssd/moveto_group')class host_delete(flask_restful.Resource):    @staticmethod    def post():        option1 = request.get_json("id_list")        print option1        id_list=[]        for item in option1['id_list']:            id_str=str(item['id'])            print id_str            # id_tuple=(""+id_str+"",)            id_list.append(id_str)        result = Click().delete_host(id_list)        return resultapi_hostinfo_v1.add_resource(host_delete, '/ssd/deletehost')class ssd_warn_by_item(flask_restful.Resource):    @staticmethod    def post():        option1 =request.get_json("monitor_item")        print("************************")        monitor_item=option1['monitor_item']        print monitor_item        # monitor_tuple=(""+monitor_item+"",)        result = SSDItem().error_host_bymonitor_item(monitor_item)        return resultapi_hostinfo_v1.add_resource(ssd_warn_by_item, '/ssd/warning_by_item')class ssd_warn_by_level(flask_restful.Resource):    @staticmethod    def post():        option1 =request.get_json("monitor_level")        print("************************")        monitor_level=option1['monitor_level']        print monitor_level        # monitor_level_tuple=(""+monitor_level+"",)        result = SSDItem().error_host_bylevel(monitor_level)        return resultapi_hostinfo_v1.add_resource(ssd_warn_by_level, '/ssd/warning_by_level')class config_time(flask_restful.Resource):    @staticmethod    def post():        option1 = request.get_json('config_time')        print option1        config=option1['config_time']        app_time_hour = option1['app_time_hour']        app_time_minute = option1['app_time_minute']        app_time_second = option1['app_time_second']        # config_tuple=(""+config+"",)        result = Click().time_config(config,app_time_hour,app_time_minute,app_time_second)        return resultapi_hostinfo_v1.add_resource(config_time, '/ssd/config_time')class host_search(flask_restful.Resource):    @staticmethod    def post():        option1 = request.get_json('host_info')        print option1        host=str(option1['host'])        # host_tuple=(""+host+"",)        mask=str(option1['mask'])        # mask_tuple=(""+mask+"",)        result = Click().host_search(host,mask)        return resultapi_hostinfo_v1.add_resource(host_search, '/ssd/search')